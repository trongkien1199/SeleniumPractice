<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="6" total="21" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="SmokeTest" duration-ms="123292" started-at="2022-08-19T15:07:01 WIB" finished-at="2022-08-19T15:09:04 WIB">
    <groups>
    </groups>
    <test name="SMOKETEST - CHROME" duration-ms="123292" started-at="2022-08-19T15:07:01 WIB" finished-at="2022-08-19T15:09:04 WIB">
      <class name="test.TestMyAccountPage">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="beforeMethod" is-config="true" duration-ms="1858" started-at="2022-08-19T15:08:35 WIB" finished-at="2022-08-19T15:08:37 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="goToAccountPage" is-config="true" duration-ms="6112" started-at="2022-08-19T15:08:37 WIB" finished-at="2022-08-19T15:08:43 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="MyAccountOrders()[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="MyAccountOrders" duration-ms="3708" started-at="2022-08-19T15:08:43 WIB" finished-at="2022-08-19T15:08:47 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MyAccountOrders -->
        <test-method status="PASS" signature="logout()[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="logout" is-config="true" duration-ms="5117" started-at="2022-08-19T15:08:47 WIB" finished-at="2022-08-19T15:08:52 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-19T15:08:52 WIB" finished-at="2022-08-19T15:08:52 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=MyAccountOrders status=SUCCESS method=TestMyAccountPage.MyAccountOrders()[pri:0, instance:test.TestMyAccountPage@5cb9f472] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="goToAccountPage" is-config="true" duration-ms="6370" started-at="2022-08-19T15:08:52 WIB" finished-at="2022-08-19T15:08:58 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="myAccountDashboard()[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="myAccountDashboard" duration-ms="160" started-at="2022-08-19T15:08:58 WIB" finished-at="2022-08-19T15:08:59 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccountDashboard -->
        <test-method status="PASS" signature="logout()[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="logout" is-config="true" duration-ms="5302" started-at="2022-08-19T15:08:59 WIB" finished-at="2022-08-19T15:09:04 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestMyAccountPage@5cb9f472]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-19T15:09:04 WIB" finished-at="2022-08-19T15:09:04 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=myAccountDashboard status=SUCCESS method=TestMyAccountPage.myAccountDashboard()[pri:0, instance:test.TestMyAccountPage@5cb9f472] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.TestMyAccountPage -->
      <class name="test.TestLogin">
        <test-method status="PASS" signature="clearScreenShotFolder(org.testng.ITestContext)[pri:0, instance:test.TestLogin@1e397ed7]" name="clearScreenShotFolder" is-config="true" duration-ms="14" started-at="2022-08-19T15:07:01 WIB" finished-at="2022-08-19T15:07:01 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearScreenShotFolder -->
        <test-method status="PASS" signature="initWebdriverObject()[pri:0, instance:test.TestLogin@1e397ed7]" name="initWebdriverObject" is-config="true" duration-ms="1" started-at="2022-08-19T15:07:01 WIB" finished-at="2022-08-19T15:07:01 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initWebdriverObject -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="beforeMethod" is-config="true" duration-ms="10269" started-at="2022-08-19T15:07:01 WIB" finished-at="2022-08-19T15:07:11 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="2519" started-at="2022-08-19T15:07:11 WIB" finished-at="2022-08-19T15:07:13 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="checkIfPasswordIsMasked()[pri:0, instance:test.TestLogin@1e397ed7]" name="checkIfPasswordIsMasked" duration-ms="255" started-at="2022-08-19T15:07:13 WIB" finished-at="2022-08-19T15:07:14 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIfPasswordIsMasked -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-19T15:07:14 WIB" finished-at="2022-08-19T15:07:14 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=checkIfPasswordIsMasked status=SUCCESS method=TestLogin.checkIfPasswordIsMasked()[pri:0, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="3149" started-at="2022-08-19T15:07:14 WIB" finished-at="2022-08-19T15:07:17 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginWithEmptyUserAndPassword()[pri:0, instance:test.TestLogin@1e397ed7]" name="loginWithEmptyUserAndPassword" duration-ms="2159" started-at="2022-08-19T15:07:17 WIB" finished-at="2022-08-19T15:07:19 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyUserAndPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:07:19 WIB" finished-at="2022-08-19T15:07:19 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyUserAndPassword status=SUCCESS method=TestLogin.loginWithEmptyUserAndPassword()[pri:0, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="2702" started-at="2022-08-19T15:07:19 WIB" finished-at="2022-08-19T15:07:22 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginWithEmptyPassword()[pri:1, instance:test.TestLogin@1e397ed7]" name="loginWithEmptyPassword" duration-ms="1844" started-at="2022-08-19T15:07:22 WIB" finished-at="2022-08-19T15:07:24 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyPassword -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:07:24 WIB" finished-at="2022-08-19T15:07:24 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyPassword status=SUCCESS method=TestLogin.loginWithEmptyPassword()[pri:1, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="2804" started-at="2022-08-19T15:07:24 WIB" finished-at="2022-08-19T15:07:26 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginWithEmptyUser()[pri:2, instance:test.TestLogin@1e397ed7]" name="loginWithEmptyUser" duration-ms="1769" started-at="2022-08-19T15:07:26 WIB" finished-at="2022-08-19T15:07:28 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyUser -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:07:28 WIB" finished-at="2022-08-19T15:07:28 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyUser status=SUCCESS method=TestLogin.loginWithEmptyUser()[pri:2, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="3219" started-at="2022-08-19T15:07:28 WIB" finished-at="2022-08-19T15:07:31 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginWithInvalidAccount()[pri:3, instance:test.TestLogin@1e397ed7]" name="loginWithInvalidAccount" duration-ms="1953" started-at="2022-08-19T15:07:31 WIB" finished-at="2022-08-19T15:07:33 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidAccount -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:07:33 WIB" finished-at="2022-08-19T15:07:33 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidAccount status=SUCCESS method=TestLogin.loginWithInvalidAccount()[pri:3, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="2748" started-at="2022-08-19T15:07:33 WIB" finished-at="2022-08-19T15:07:36 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginWithNonExistAccount()[pri:4, instance:test.TestLogin@1e397ed7]" name="loginWithNonExistAccount" duration-ms="1764" started-at="2022-08-19T15:07:36 WIB" finished-at="2022-08-19T15:07:38 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithNonExistAccount -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:07:38 WIB" finished-at="2022-08-19T15:07:38 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithNonExistAccount status=SUCCESS method=TestLogin.loginWithNonExistAccount()[pri:4, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="4654" started-at="2022-08-19T15:07:38 WIB" finished-at="2022-08-19T15:07:42 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginWithValidAccount()[pri:5, instance:test.TestLogin@1e397ed7]" name="loginWithValidAccount" duration-ms="5845" started-at="2022-08-19T15:07:42 WIB" finished-at="2022-08-19T15:07:48 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidAccount -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-19T15:07:48 WIB" finished-at="2022-08-19T15:07:48 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithValidAccount status=SUCCESS method=TestLogin.loginWithValidAccount()[pri:5, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestLogin@1e397ed7]" name="goToAccountPage" is-config="true" duration-ms="2651" started-at="2022-08-19T15:07:48 WIB" finished-at="2022-08-19T15:07:51 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="loginAuthentication()[pri:6, instance:test.TestLogin@1e397ed7]" name="loginAuthentication" duration-ms="7925" started-at="2022-08-19T15:07:51 WIB" finished-at="2022-08-19T15:07:59 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAuthentication -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestLogin@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:07:59 WIB" finished-at="2022-08-19T15:07:59 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginAuthentication status=SUCCESS method=TestLogin.loginAuthentication()[pri:6, instance:test.TestLogin@1e397ed7] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.TestLogin@1e397ed7]" name="afterSuite" is-config="true" duration-ms="108" started-at="2022-08-19T15:09:04 WIB" finished-at="2022-08-19T15:09:04 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.TestLogin -->
      <class name="test.TestRegister">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:test.TestRegister@6e1567f1]" name="beforeMethod" is-config="true" duration-ms="2721" started-at="2022-08-19T15:07:59 WIB" finished-at="2022-08-19T15:08:02 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestRegister@6e1567f1]" name="goToAccountPage" is-config="true" duration-ms="2309" started-at="2022-08-19T15:08:02 WIB" finished-at="2022-08-19T15:08:04 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="registerWithEmptyEmailAndPass()[pri:0, instance:test.TestRegister@6e1567f1]" name="registerWithEmptyEmailAndPass" duration-ms="3990" started-at="2022-08-19T15:08:04 WIB" finished-at="2022-08-19T15:08:08 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithEmptyEmailAndPass -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestRegister@6e1567f1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:08:08 WIB" finished-at="2022-08-19T15:08:08 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=registerWithEmptyEmailAndPass status=SUCCESS method=TestRegister.registerWithEmptyEmailAndPass()[pri:0, instance:test.TestRegister@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestRegister@6e1567f1]" name="goToAccountPage" is-config="true" duration-ms="2619" started-at="2022-08-19T15:08:08 WIB" finished-at="2022-08-19T15:08:11 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="registerWithEmptyEmail()[pri:1, instance:test.TestRegister@6e1567f1]" name="registerWithEmptyEmail" duration-ms="2631" started-at="2022-08-19T15:08:11 WIB" finished-at="2022-08-19T15:08:13 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithEmptyEmail -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestRegister@6e1567f1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:08:13 WIB" finished-at="2022-08-19T15:08:13 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=registerWithEmptyEmail status=SUCCESS method=TestRegister.registerWithEmptyEmail()[pri:1, instance:test.TestRegister@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestRegister@6e1567f1]" name="goToAccountPage" is-config="true" duration-ms="2754" started-at="2022-08-19T15:08:13 WIB" finished-at="2022-08-19T15:08:16 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="registerWithEmptyPass()[pri:2, instance:test.TestRegister@6e1567f1]" name="registerWithEmptyPass" duration-ms="2740" started-at="2022-08-19T15:08:16 WIB" finished-at="2022-08-19T15:08:19 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithEmptyPass -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestRegister@6e1567f1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-19T15:08:19 WIB" finished-at="2022-08-19T15:08:19 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=registerWithEmptyPass status=SUCCESS method=TestRegister.registerWithEmptyPass()[pri:2, instance:test.TestRegister@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestRegister@6e1567f1]" name="goToAccountPage" is-config="true" duration-ms="2863" started-at="2022-08-19T15:08:19 WIB" finished-at="2022-08-19T15:08:22 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="registerWithInvalidEmail()[pri:3, instance:test.TestRegister@6e1567f1]" name="registerWithInvalidEmail" duration-ms="3018" started-at="2022-08-19T15:08:22 WIB" finished-at="2022-08-19T15:08:25 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithInvalidEmail -->
        <test-method status="PASS" signature="goToAccountPage()[pri:0, instance:test.TestRegister@6e1567f1]" name="goToAccountPage" is-config="true" duration-ms="3164" started-at="2022-08-19T15:08:25 WIB" finished-at="2022-08-19T15:08:28 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToAccountPage -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestRegister@6e1567f1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-19T15:08:25 WIB" finished-at="2022-08-19T15:08:25 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=registerWithInvalidEmail status=SUCCESS method=TestRegister.registerWithInvalidEmail()[pri:3, instance:test.TestRegister@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="registerWithValidAccount()[pri:4, instance:test.TestRegister@6e1567f1]" name="registerWithValidAccount" duration-ms="7523" started-at="2022-08-19T15:08:28 WIB" finished-at="2022-08-19T15:08:35 WIB">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithValidAccount -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext,org.testng.ITestResult,java.lang.String)[pri:0, instance:test.TestRegister@6e1567f1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-19T15:08:35 WIB" finished-at="2022-08-19T15:08:35 WIB">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@16132f21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=registerWithValidAccount status=SUCCESS method=TestRegister.registerWithValidAccount()[pri:4, instance:test.TestRegister@6e1567f1] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.TestRegister -->
    </test> <!-- SMOKETEST - CHROME -->
  </suite> <!-- SmokeTest -->
</testng-results>
